# vim: ft=zsh shiftwidth=2 tabstop=2 noexpandtab
#zmodload zsh/zprof

# Hyphen-insensitive completion.
HYPHEN_INSENSITIVE="true"

# Disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Enable command auto-correction.
ENABLE_CORRECTION="true"

# Display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Disable marking untracked files under VCS as dirty.
DISABLE_UNTRACKED_FILES_DIRTY="true"


# Autoloads
unalias run-help &> /dev/null
autoload -Uz run-help
alias help=run-help
autoload -U colors && colors

# Completions
autoload -Uz compinit
zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'
zstyle ":completion:*:commands" rehash 1
zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]} m:{[:lower:][:upper:]}={[:upper:][:lower:]}' '+r:|[._-]=** r:|=**' '+l:|=* r:|=*'
zstyle ':completion::complete:*' gain-privileges 1 	# sudo completion
zstyle ':completion:*' menu select
zmodload zsh/complist

# completion using a menu and vi keys
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

zstyle :compinstall filename '~/.zshrc'
compinit
_comp_options+=(globdots)     # include hidden files

# Shell options
setopt extendedglob nomatch null_glob notify interactive_comments no_bg_nice

# Prompt
setopt prompt_subst

## Changing Directories
setopt auto_cd auto_pushd pushd_ignore_dups pushd_to_home

## Completions
setopt auto_list list_ambiguous complete_aliases

# don't beep
unsetopt beep

# History Settings {{{
export HISTIGNORE="&:ls:[bf]g:exit:reset:clear:cd:cd ..:cd.."

setopt append_history hist_find_no_dups hist_ignore_space hist_save_no_dups \
	hist_verify hist_ignore_dups hist_ignore_all_dups hist_fcntl_lock \
	inc_append_history share_history

export HISTSIZE=1000000
export HISTFILE=~/.local/share/zsh/history
export SAVEHIST=10000000

# The optional three formats: mm/dd/yyyy | dd.mm.yyyy | yyyy-mm-dd
HIST_STAMPS="yyyy-mm-dd"
#}}}

# vi mode
bindkey -v
bindkey ",," vi-cmd-mode

# emacs-like keybinds
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word

bindkey '^a' beginning-of-line
bindkey '^e' end-of-line

bindkey '^b' backward-word
bindkey '^f' forward-word


# Search through history forward and backward using ^R, ^N
bindkey '^R' history-incremental-search-backward
bindkey '^N' history-incremental-search-forward

# Scroll up and down through history
bindkey '^k' up-history
bindkey '^j' down-history

# V' in vi-cmd-mode will edit current line in Vim
zle -N edit-command-line
autoload edit-command-line
bindkey -M vicmd 'V' edit-command-line
# }}}


# prompt
if command -v starship &> /dev/null ; then
	eval "$(starship init zsh)"
else
	PROMPT="%(1j.[%j] .)%{$fg[cyan]%}==> %{$reset_color%}"
	RPROMPT="%~"
fi

# local dotfiles home
export CONFIGDIR=${CONFIGDIR:-${HOME}/.dotfiles}

#Source outer files
source ${CONFIGDIR}/shell/aliases
source ${CONFIGDIR}/shell/functions
[[ -e ${CONFIGDIR}/zsh/zshrc.$HOST ]] && \
	source ${CONFIGDIR}/zsh/zshrc.$HOST

#zprof

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/bwayne/psi4conda/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/bwayne/psi4conda/etc/profile.d/conda.sh" ]; then
        . "/home/bwayne/psi4conda/etc/profile.d/conda.sh"
    else
        export PATH="/home/bwayne/psi4conda/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

